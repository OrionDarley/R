
# Orion Darley

#############################################################################
# Exercise 8 (ISLR Section 2.4)
#############################################################################
setwd("C:/NameYourDirectory")

# Clear workspace
rm(list=ls())

# Load packages
library(lattice)
library(corrplot)
library(stats)
library(fBasics)
library(ISLR)

#(a) Use the read.csv() function to read the data into R. Call the loaded data college. 
#Make sure that you have the directory set to the correct location for the data.

college <- read.csv("College.csv")

#(b) Look at the data using the fix() function. You should notice that the first column is just the 
#name of each university. We don't really want R to treat this as data. 
#However, it may be handy to have these names for later. 

rownames(college)=college[,1]
fix(college)

college <- college[,-1]
fix(college)

#(c) i. Use the summary() function to produce a numerical summary
#of the variables in the data set.

summary(college)

#ii. Use the pairs() function to produce a scatterplot matrix of
#the first ten columns or variables of the data. Recall that
#you can reference the first ten columns of a matrix A using
#A[,1:10].

pairs(college[,1:10])

#iii. Use the plot() function to produce side-by-side boxplots of
#Outstate versus Private.

par(mfrow = c(1,1))
plot(college$Private,college$Outstate,xlab="Private",ylab="Outstate", main = "Boxplots of Outstate versus Private", col="deepskyblue2")

#iv. Create a new qualitative variable, called Elite, by binning
#the Top10perc variable. We are going to divide universities
#into two groups based on whether or not the proportion
#of students coming from the top 10% of their high school classes exceeds 50%.
#Use the summary() function to see how many elite universities
#there are. Now use the plot() function to produce
#side-by-side boxplots of Outstate versus Elite.

Elite = rep("No",nrow(college))
Elite[college$Top10perc > 50] = "Yes"
Elite = as.factor(Elite)
college = data.frame(college,Elite)
summary(college$Elite)
plot(college$Elite,college$Outstate,xlab="Elite",ylab="Outstate", main = "Boxplots of Outstate versus Elite", col="deepskyblue2")

#v. Use the hist() function to produce some histograms with
#differing numbers of bins for a few of the quantitative variables.
#You may find the command par(mfrow=c(2,2)) useful:
#it will divide the print window into four regions so that four
#plots can be made simultaneously. Modifying the arguments
#to this function will divide the screen in other ways.

par(mfrow=c(2,2))
hist(college$Apps,breaks=50,col="deepskyblue2",xlab="# of Applications",main="")
hist(college$Accept,breaks=20,col="deepskyblue2",xlab="# of Students Accepted",main="")
hist(college$Top10perc,breaks=15,col="deepskyblue2",xlab="Top 10% from H.S.",main="")
hist(college$Grad.Rate,breaks=15,col="deepskyblue2",xlab="Graduation Rate",main="")
title(main = paste("", "\nCollege Dataset Historgrams"), outer = TRUE, cex = 1.5)

#vi. Continue exploring the data, and provide a brief summary
# what you discover.

cor(college[,2:18])

apps <- college[,2]
n = sum(!is.na(apps))
accept <- college$Accept
n1 = sum(!is.na(accept))
top10 <- college$Top10perc
grad <- college$Grad.Rate

par(mfrow = c(2,2))
plot(ecdf(apps), xlab = 'Sample Quantiles of Apps', ylab = ' ')
plot(ecdf(accept), xlab = 'Sample Quantiles of Accept', ylab = ' ')
plot(ecdf(top10), xlab = 'Sample Quantiles of Top 10 % H.S.', ylab = ' ')
plot(ecdf(grad), xlab = 'Sample Quantiles of Graduates', ylab = ' ')
title(main = paste("", "\nEmpirical Cumluative Distributions of College Dataset"), outer = TRUE, cex = 1.5)

#############################################################################
#9. This exercise involves the Auto data set studied in the lab. Make sure
#that the missing values have been removed from the data.
#############################################################################

inPath = file.path("C:/NameYourDirectory")
Auto = read.table(file.path(inPath,"Auto.data"),header=TRUE,na.strings="?")
dim(Auto)
Auto = na.omit(Auto)
dim(Auto)

#(a) Which of the predictors are quantitative, and which are qualitative?

str(Auto)
summary(Auto)
head(Auto)

#(b) What is the range of each quantitative predictor? You can answer
#this using the range() function. 

for (ii in 1:7)
{
  rng = range(Auto[,ii])
  print(paste(names(Auto)[ii],": ",rng[1]," to ",rng[2],sep=""))
}

#(c) What is the mean and standard deviation of each quantitative predictor?

apply(Auto[,1:7],2,mean)
apply(Auto[,1:7],2,sd)

#(d) Now remove the 10th through 85th observations. What is the
#range, mean, and standard deviation of each predictor in the
#subset of the data that remains?

Auto.subset = Auto[-(10:85),]
sapply(Auto.subset[,1:7],range)
sapply(Auto.subset[,1:7],mean)
sapply(Auto.subset[,1:7],sd)

#(e) Using the full data set, investigate the predictors graphically,
#using scatterplots or other tools of your choice. Create some plots
#highlighting the relationships among the predictors. Comment
#on your findings.

pairs(Auto[,1:8])
Auto$cylinders = as.factor(Auto$cylinders)
Auto$origin = as.factor(Auto$origin)
pairs(Auto[,c(1,3:7)])
par(mfrow=c(1,2))
barplot(table(Auto$cylinders),xlab="cylinders", ylim = c(0, 300), col="deepskyblue2")
barplot(table(Auto$origin),xlab="origin", ylim = c(0, 300), col="deepskyblue2")
title(main = paste("", "\nHistograms of Factor Variables"), outer = TRUE, cex = 3)

par(mfcol=c(2,2))
x <- Auto$mpg 
h<-hist(x, breaks=10, col="deepskyblue2", xlab="Miles Per Gallon", 
        main=" ", ylim = c(0,125)) 
x2 <- Auto$displacement 
h2<-hist(x2, breaks=10, col="deepskyblue2", xlab="Displacement", 
        main=" ", ylim = c(0,125)) 
x3 <- Auto$horsepower
h3<-hist(x3, breaks=10, col="deepskyblue2", xlab="horsepower", 
        main=" ", ylim = c(0,125)) 
x4 <- Auto$weight
h4<-hist(x4, breaks=10, col="deepskyblue2", xlab="horsepower", 
         main=" ", ylim = c(0,125)) 
title(main = paste("", "\nHistorgrams of non-factor integers"), outer = TRUE, cex = 3)


xfit<-seq(min(x),max(x),length=40) 
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x)) 
yfit <- yfit*diff(h$mids[1:2])*length(x) 
lines(xfit, yfit, col="blue", lwd=2)
head(Auto[,1:7])

corauto <- data.frame(Auto$mpg, Auto$displacement, Auto$horsepower, Auto$weight, Auto$acceleration, Auto$year)
str(corauto); cor(corauto)

#(f) Suppose that we wish to predict gas mileage (mpg) on the basis
#of the other variables. Do your plots suggest that any of the
#other variables might be useful in predicting mpg? Justify your answer.

par(mfrow=c(2,3))
plot(Auto$displacement,Auto$mpg,xlab="displacement",ylab="mpg")
plot(Auto$horsepower,Auto$mpg,xlab="horsepower",ylab="mpg")
plot(Auto$weight,Auto$mpg,xlab="weight",ylab="mpg")
plot(Auto$acceleration,Auto$mpg,xlab="acceleration",ylab="mpg")
plot(Auto$year,Auto$mpg,xlab="year",ylab="mpg")

par(mfrow=c(1,2))
plot(Auto$cylinders,Auto$mpg,xlab="cylinders",ylab="mpg")
plot(Auto$origin,Auto$mpg,xlab="origin",ylab="mpg")
